angular.module("main",[]),angular.module("main").config(["$routeProvider",function(e){e.when("/",{redirectTo:"/requests"}).when("/profile",{templateUrl:"/main/views/users.client.userprofile.html",controller:"ProfileController"}).when("/requests",{templateUrl:"/main/views/main.client.requests.html",controller:"RequestsController"}).when("/conversations",{templateUrl:"/main/views/main.client.conversations.html",controller:"ConversationsController"}).when("/settings",{templateUrl:"/main/views/main.client.settings.html",controller:"SettingsController"}).otherwise({redirectTo:"/"})}]),angular.module("main").controller("ConversationsController",["$scope","MainService","$location","$rootScope","$http",function(e,o,t,n,r){n.currentUrl=t.path(),n.viewRequestId&&r.get("/api/v1/request/"+n.viewRequestId).success(function(o,t,r){delete n.viewRequestId,console.log(o),e.request=o})}]),angular.module("main").controller("ImageModalController",["$scope","MainService","$location","$rootScope","$cookies","close","url",function(e,o,t,n,r,l,s){e.close=l,e.url=s}]),angular.module("main").controller("MainController",["$scope","MainService","$location","$rootScope","$cookies",function(e,o,t,n,r){n.currentUrl=t.path(),console.log("running"),o.authCheck(),e.logOut=function(){o.logOut()}}]),angular.module("main").controller("ProfileController",["$scope","MainService","$rootScope","$cookies","$location",function(e,o,t,n,r){t.currentUrl=r.path();var l=function(){o.getUser().success(function(o){e.userData=o,e.pend=0,e.comp=0,e.ans=0;for(var t=0;t<o.requests.length;t++)o.requests[t].inQueue===!0&&(e.pend+=1),o.requests[t].inQueue===!1&&(e.comp+=1);for(;t<o.filledRequests.length;t++)e.ans+=1})};l()}]),angular.module("main").controller("RequestsController",["$scope","MainService","$location","$rootScope","$cookies",function(e,o,t,n,r){n.currentUrl=t.path(),o.getAvaliableRequests(),e.showNewRequest=function(e){console.log("loading request modal"),o.showModal(e)},e.viewBigger=function(e){console.log("loading image modal"),o.showImageModal(e)},e.goToRequest=function(e){o.selectedRequest(e)}}]),angular.module("main").controller("SettingsController",["$scope","MainService","$location","$rootScope","$cookies",function(e,o,t,n,r){n.currentUrl=t.path()}]),angular.module("main").factory("MainService",["$http","$cookies","$location","$rootScope","$window","ModalService",function(e,o,t,n,r,l){var s={};return s.newUser={},s.getUser=function(){return e.get("/api/v1/currentuser")},s.selectedRequest=function(e){t.path("conversations"),n.viewRequestId=e},s.showRequest=function(){console.log(n.viewRequestId),e.get("/api/v1/request/"+n.viewRequestId).success(function(e,o,t){return delete n.viewRequestId,console.log(e),e})},s.authCheck=function(){void 0===o.get("token")?this.logOut():(n.authenticated=!0,n.token=o.get("token"))},s.getAvaliableRequests=function(){void 0===o.get("token")?this.logOut():(n.authenticated=!0,n.token=o.get("token"),e.get("/api/v1/availableRequests/").success(function(e,o,t){n.requests=e,console.log(e)}).error(function(e,o,t,n){console.log(e)}))},s.getUsersRequests=function(){e.get("/api/v1/request/").success(function(e,o,t){n.requests=e,console.log(e)}).error(function(e,o,t,n){console.log(e)})},s.logOut=function(){o.remove("token"),delete n.token,delete n.authenticated,e.get("/signout").success(function(e,t,n,l){console.log(o.getAll()),r.location.href="/"})},s.showModal=function(e){"image"==e?l.showModal({templateUrl:"/request_modal/views/requestmodal.client.image.html",controller:"RequestModalController"}):"voice"==e?l.showModal({templateUrl:"/request_modal/views/requestmodal.client.voice.html",controller:"RequestModalController"}):l.showModal({templateUrl:"/request_modal/views/requestmodal.client.text.html",controller:"RequestModalController"})},s.showImageModal=function(e){l.showModal({templateUrl:"/main/views/main.client.imagemodal.html",controller:"ImageModalController",inputs:{url:e}})},s}]),angular.module("users",[]),angular.module("users").config(["$routeProvider",function(e){e.when("/",{templateUrl:"/users/views/users.client.signin.html",controller:"UserController"}).when("/signup",{templateUrl:"/users/views/users.client.signup.html",controller:"UserController"}).when("/signup2",{templateUrl:"/users/views/users.client.signup2.html",controller:"UserController"}).when("/signup3",{templateUrl:"/users/views/users.client.signup3.html",controller:"UserController"}).otherwise({redirectTo:"/"})}]),angular.module("users").controller("UserController",["$scope","UserService",function(e,o){console.log("user controller loaded"),e.languages=["English","French","German","Russian","Italian","Spanish"],e.logIn=function(){o.logIn(e.user)},e.logOut=function(){o.logOut()},e.signUpOne=function(){e.signUp1.$valid&&o.signUpOne(e.newUser)},e.signUpTwo=function(e){o.signUpTwo(e)},e.signUpThree=function(e){o.signUpThree(e)}}]),angular.module("users").factory("UserService",["$http","$cookies","$location","$rootScope","$window",function(e,o,t,n,r){var l={};return l.newUser={},l.getUserById=function(o){return e.get("/api/v1/users/"+o)},l.logOut=function(){o.remove("token"),delete n.token,delete n.authenticated,e.get("/signout").success(function(e,o,t,n){console.log("this ran")})},l.logIn=function(l){e.post("/api/v1/signin",l).success(function(e,l,s,i){n.token=e.token,n.authenticated=!0,e.needLang===!0?t.path("/signup2"):(o.put("token",e.token,{path:"/main/"}),r.location.href="/main/")}).error(function(e,o,t,r){"Unauthorized"==e?n.message="Incorrect Username or Password.":n.message=e})},l.signUpOne=function(o){e.post("/api/v1/signup",o).success(function(e,o,r,l){n.token=e.token,n.authenticated=!0,t.path("/signup2")}).error(function(e,o,t,r){n.message=e})},l.signUpTwo=function(r){console.log(n.authenticated),void 0===n.authenticated&&(o.get("token")?(console.log(o.get("token")),n.token=o.get("token"),n.authenticated=!0):this.logOut()),n.selectedLanguage=r,e.put("api/v1/currentuser",{nativeLanguages:[r]}).success(function(e,o,n,r){t.path("/signup3")}).error(function(e,o,t,n){console.log(e)})},l.signUpThree=function(t){e.put("api/v1/currentuser",{targetLanguages:[t]}).success(function(e,t,n,l){o.put("token",e.token,{path:"/main/"}),r.location.href="/main/"}).error(function(e,o,t,n){console.log(e)})},l}]),navigator.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia||navigator.webkitGetUserMedia,console.log(navigator.getUserMedia),console.log(navigator.mozGetUserMedia),angular.module("requestModal",[]),angular.module("requestModal").controller("RequestModalController",["$scope","ModalService","$rootScope","$cookies","close","RequestModalService","$sce","$timeout","$document",function(e,o,t,n,r,l,s,i,a){function u(o){e.mediaRecorder=new MediaStreamRecorder(o),e.mediaRecorder.mimeType="audio/wav",e.mediaRecorder.audioChannels=1,e.mediaRecorder.onstop=function(){console.log("recording has been stopped.")},e.mediaRecorder.ondataavailable=function(o){var t=URL.createObjectURL(o);console.log("data available",o),console.log(t),e.audioRecording=s.trustAsResourceUrl(t),e.recordingDone=!0,e.blob=o}}function c(e){console.error("Error:",e)}t.close=r,t.progress=0;var d=function(){var e={audio:!0};navigator.getUserMedia(e,u,c)};e.startRecording=function(){e.recording=!0,e.recordingDone=!1,e.mediaRecorder.start(6e4),i(e.stopRecording,6e4)},e.stopRecording=function(){e.mediaRecorder.stop(),e.recording=!1},e.recording=!1,d(),e.submitRequest=function(){console.log("submitting request"),console.log(e.upload);var o={authorId:n.get("currentId"),title:e.title,description:e.description};if("image"==e.upload){console.log(requestForm.image.$valid);var t=a.find("img"),r=t[t.length-1].currentSrc;l.uploadToS3(e.image,o,r)}else if("voice"==e.upload){var s=angular.element(document.querySelector("audio")),i=s[0].duration,u=Math.round(i);if(10>u)o.audioDuration="0:0"+u.toString();else if(60>=u)o.audioDuration="0:"+u.toString();else{var c=Math.floor(u/60),d=u-60*c,g=c.toString()+":"+d.toString();o.audioDuration=g}l.saveRecording(e.blob,o)}else l.postNewRequest(o);l.redirect(e.upload)}}]),angular.module("requestModal").factory("RequestModalService",["$http","$cookies","$location","$rootScope","$window","Upload","ModalService","$timeout",function(e,o,t,n,r,l,s,i){var a={};return a.newUser={},a.saveRecording=function(e,o){console.log("compressing recording");var t=new FileReader,n=this;t.onloadend=function(e){var t=new Int16Array(e.target.result),r=new lamejs,l=[],s=new r.Mp3Encoder(1,44100,128),i=t,a=s.encodeBuffer(i);l.push(a),a=s.flush(),l.push(a);var u=new Blob(l,{type:"audio/mp3"}),c=URL.createObjectURL(u);n.uploadToS3(u,o),n.blob=u,n.blobURL=c},t.readAsArrayBuffer(e)},a.uploadToS3=function(t,r,s){console.log("uploading...");var a;a=t.name?t.name.split(".").pop():"mp3";var u={filetype:a,userId:o.get("currentId"),type:t.type},c=this;console.log(r),e.post("/signing",u).success(function(e){if(s){var o=new XMLHttpRequest;o.open("GET",s,!0),o.responseType="blob",o.onload=function(o){if(200==this.status){var t=this.response,n=e;n.fields.key=n.fields.key.substr(0,n.fields.key.lastIndexOf("."))+"_th."+a,l.upload({url:e.url,transformRequest:function(e,o){var t=o();return delete t.Authorization,e},data:n.fields,method:"POST",headers:{"Content-Type":e.fields["Content-Type"]},file:t}).success(function(e,o,t,n){console.log(e);var l=e.match("<Location>(.*)</Location>"),s=l[1];r.imageUrlTh=s}).error(function(e){console.log(e)})}},o.send()}console.log(e),l.upload({url:e.url,transformRequest:function(e,o){var t=o();return delete t.Authorization,e},data:e.fields,method:"POST",headers:{"Content-Type":e.fields["Content-Type"]},file:t}).progress(function(e){console.log("progress: "+parseInt(100*e.loaded/e.total)),n.progress=parseInt(100*e.loaded/e.total)}).success(function(e,o,t,l){n.result=e;var s=e.match("<Location>(.*)</Location>"),u=s[1];i(n.close,2e3),"mp3"==a?r.audioUrl=u:r.imageUrl=u,c.postNewRequest(r)}).error(function(){})}).error(function(e,o,t,r){n.errorMsg=o+": "+e,console.log("ERROR:"),console.log(t),console.log(o),console.log(e)})},a.postNewRequest=function(o){e.post("/api/v1/request",o).success(function(e,o,t,n){console.log("new request")}).error(function(e,o,t,n){console.log("Error")})},a.redirect=function(e){"text"==e?i(n.close,2e3):(n.close(),s.showModal({templateUrl:"/request_modal/views/requestmodal.client.submitted.html",controller:"RequestModalController"}))},a}]);var app=angular.module("squawker",["ngRoute","ngCookies","ngFileUpload","timer","users","main","requestModal","angularModalService","angular-svg-round-progress","angularMoment"]);app.run(function(e){e.changeLocale("en")}),app.factory("httpRequestInterceptor",["$rootScope",function(e){return{request:function(o){return e.authenticated&&(o.headers.Authorization=e.token),o}}}]),app.config(function(e,o){e.resourceUrlWhitelist(["self","https://s3.amazonaws.com/parakeet-uploads/**"]),o.interceptors.push("httpRequestInterceptor")});